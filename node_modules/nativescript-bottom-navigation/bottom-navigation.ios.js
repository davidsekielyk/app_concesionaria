"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var bottom_navigation_common_1 = require("./bottom-navigation.common");
var color_1 = require("tns-core-modules/color");
var image_source_1 = require("tns-core-modules/image-source");
var platform_1 = require("tns-core-modules/platform");
var BottomNavigationDelegate = (function (_super) {
    __extends(BottomNavigationDelegate, _super);
    function BottomNavigationDelegate() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BottomNavigationDelegate.initWithOwner = function (owner) {
        var delegate = BottomNavigationDelegate.new();
        delegate._owner = owner;
        return delegate;
    };
    BottomNavigationDelegate.prototype.onTabSelected = function (index) {
        var bar = this._owner.get();
        bar.onTabSelected(index);
    };
    return BottomNavigationDelegate;
}(NSObject));
BottomNavigationDelegate.ObjCProtocols = [MiniTabBarDelegate];
exports.BottomNavigationDelegate = BottomNavigationDelegate;
var BottomNavigation = (function (_super) {
    __extends(BottomNavigation, _super);
    function BottomNavigation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BottomNavigation.prototype.createNativeView = function () {
        this.nativeView = new MiniTabBar({ items: null });
        this._delegate = BottomNavigationDelegate.initWithOwner(new WeakRef(this));
        this.nativeView.frame = CGRectMake(0, platform_1.screen.mainScreen.heightDIPs - 56, platform_1.screen.mainScreen.widthDIPs, 56);
        return this.nativeView;
    };
    BottomNavigation.prototype.initNativeView = function () {
        this.nativeView.tintColor = new color_1.Color(this.activeColor).ios;
        this.nativeView.inactiveColor = new color_1.Color(this.inactiveColor).ios;
        this.nativeView.backgroundColor = new color_1.Color(this.backgroundColor).ios;
        this.nativeView.backgroundBlurEnabled = false;
    };
    BottomNavigation.prototype.disposeNativeView = function () {
        this._delegate = null;
    };
    BottomNavigation.prototype.onLoaded = function () {
        this.nativeView.delegate = this._delegate;
        _super.prototype.onLoaded.call(this);
    };
    BottomNavigation.prototype.onUnloaded = function () {
        this.nativeView.delegate = null;
        _super.prototype.onUnloaded.call(this);
    };
    Object.defineProperty(BottomNavigation.prototype, "ios", {
        get: function () {
            return this.nativeView;
        },
        enumerable: true,
        configurable: true
    });
    BottomNavigation.prototype[bottom_navigation_common_1.tabsProperty.getDefault] = function () {
        return null;
    };
    BottomNavigation.prototype[bottom_navigation_common_1.tabsProperty.setNative] = function (value) {
        this.createTabs(value);
    };
    BottomNavigation.prototype.createTabs = function (tabs) {
        var bottomNavigationTabs = [];
        for (var _i = 0, tabs_1 = tabs; _i < tabs_1.length; _i++) {
            var tab = tabs_1[_i];
            tab.parent = new WeakRef(this);
            var miniTabBarItem = new MiniTabBarItem({ title: tab.title, icon: image_source_1.fromResource(tab.icon).ios });
            bottomNavigationTabs.push(miniTabBarItem);
        }
        this.nativeView.setTabs(bottomNavigationTabs);
    };
    BottomNavigation.prototype[bottom_navigation_common_1.activeColorProperty.setNative] = function (activeColor) {
        this.nativeView.tintColor = new color_1.Color(activeColor).ios;
    };
    BottomNavigation.prototype[bottom_navigation_common_1.activeColorCssProperty.setNative] = function (activeColor) {
        this.nativeView.tintColor = activeColor.ios;
    };
    BottomNavigation.prototype[bottom_navigation_common_1.inactiveColorProperty.setNative] = function (inactiveColor) {
        this.nativeView.inactiveColor = new color_1.Color(inactiveColor).ios;
    };
    BottomNavigation.prototype[bottom_navigation_common_1.inactiveColorCssProperty.setNative] = function (inactiveColor) {
        this.nativeView.inactiveColor = inactiveColor.ios;
    };
    BottomNavigation.prototype[bottom_navigation_common_1.backgroundColorProperty.setNative] = function (backgroundColor) {
        this.nativeView.backgroundColor = new color_1.Color(backgroundColor).ios;
    };
    BottomNavigation.prototype[bottom_navigation_common_1.backgroundColorCssProperty.setNative] = function (backgroundColor) {
        this.nativeView.backgroundColor = backgroundColor.ios;
    };
    BottomNavigation.prototype.onTabSelected = function (index) {
        var eventData = {
            eventName: 'tabSelected',
            object: this,
            oldIndex: this.selectedTabIndex,
            newIndex: index
        };
        this.selectedTabIndex = index;
        this.notify(eventData);
    };
    BottomNavigation.prototype.selectTabNative = function (index) {
        this.nativeView.selectItem(index, true);
    };
    return BottomNavigation;
}(bottom_navigation_common_1.BottomNavigationBase));
exports.BottomNavigation = BottomNavigation;
var BottomNavigationTab = (function (_super) {
    __extends(BottomNavigationTab, _super);
    function BottomNavigationTab(title, icon, parent) {
        return _super.call(this, title, icon, parent) || this;
    }
    return BottomNavigationTab;
}(bottom_navigation_common_1.BottomNavigationTabBase));
exports.BottomNavigationTab = BottomNavigationTab;
//# sourceMappingURL=bottom-navigation.ios.js.map